function [residual, jacobian] = reprojectionFn(x) 
%function [residual, jacobian, weights, color] = reprojectionFn(x) 

    % Precondition: 
    % Expects the following variables to be in the workspace. Load these
    % variables before calling this function
    % 
    % features (nx9) with n features
    %   col 1 - feature id
    %   col 2-3 - feature normalized location in k-1 frame (Xbk_1)
    %   col 4 - has depth in k-1 frame 
    %   col 5-7 - feature 3d location in k-1 frame (Xk_1)
    %   col 8-9 - feature normalized location in k frame (Xbk)
    %
    % translation (3x1) - x,y,z translation
    %
    % thetas (3x1) - x,y,z rotations in radians
    
    global features;
    Xbk_1 = features(:,2:3);
    has_k_1_depth = features(:,4);
    Xk_1 = features(:,5:7);
    Xbk = features(:,8:9);
    
%     T = translation;
%     t = thetas;
    T = x(1:3);
    t = x(4:6);

    %bisqure Weight Constant
    global C_nodepth;
    global C_depth_x;
    global C_depth_y;
    
    %fprintf('Using translation:[%f,%f,%f], rotation:[%f,%f,%f]\n', x(1),x(2),x(3),x(4),x(5),x(6));
    
    %extracted from the symbolic expression
    depth_exp1 = @(T,t,pXk_1,pXbk) T(1) - T(3)*pXbk(1) + pXk_1(1)*(pXbk(1)*((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + ((t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) - pXk_1(3)*(pXbk(1)*(((t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) - (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) - pXk_1(2)*(pXbk(1)*((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2));
    depth_exp2 = @(T,t,pXk_1,pXbk) T(2) - T(3)*pXbk(2) + pXk_1(2)*(((t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - pXbk(2)*((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + 1) - pXk_1(3)*(pXbk(2)*(((t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + pXk_1(1)*(pXbk(2)*((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2));
    nodepth_exp1 = @(T,t,pXbk_1, pXbk) pXbk_1(1)*((T(2) - T(3)*pXbk(2))*(((t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) + ((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(2)*pXbk(1) - T(1)*pXbk(2)) - ((t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(1) - T(3)*pXbk(1))) - pXbk_1(2)*((T(1) - T(3)*pXbk(1))*(((t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) + ((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(2)*pXbk(1) - T(1)*pXbk(2)) + ((t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(2) - T(3)*pXbk(2))) - (T(2)*pXbk(1) - T(1)*pXbk(2))*(((t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) + ((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(1) - T(3)*pXbk(1)) + ((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2))*(T(2) - T(3)*pXbk(2));

    depth_exp1_Jacobian = @(T,t,pXk_1,pXbk) [ 1, 0, -pXbk(1), pXk_1(3)*(pXbk(1)*((2*t(1)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(1)*(pXbk(1)*((t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (2*t(1)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (pXk_1(2)*(2*t(1)^2*t(2) - t(2)*(t(1)^2 + t(2)^2 + t(3)^2) - 2*t(1)^2*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) + t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + pXbk(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + t(1)^2*pXbk(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - 2*t(1)*t(2)*t(3)*pXbk(1) - t(1)^2*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - t(1)^2*pXbk(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + 2*t(1)*t(2)*t(3)*pXbk(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) + t(1)*t(2)*t(3)*pXbk(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^2, pXk_1(3)*(pXbk(1)*((2*t(2)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) + sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(1)*(pXbk(1)*((t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(2)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - (2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (2*t(2)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - pXk_1(2)*(pXbk(1)*((t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (2*t(1)*t(2)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2), pXk_1(3)*(pXbk(1)*((2*t(3)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(1)*(pXbk(1)*((t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - (2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (2*t(3)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (pXk_1(2)*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - 2*t(2)*t(3)^2*pXbk(1) + t(2)*pXbk(1)*(t(1)^2 + t(2)^2 + t(3)^2) + t(3)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + 2*t(1)*t(2)*t(3) - 2*t(1)*t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) + 2*t(2)*t(3)^2*pXbk(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - t(2)*pXbk(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + t(2)*t(3)^2*pXbk(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + t(1)*t(3)*pXbk(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - t(1)*t(3)*pXbk(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^2];
    depth_exp2_Jacobian = @(T,t,pXk_1,pXbk) [ 0, 1, -pXbk(2), pXk_1(3)*(pXbk(2)*((2*t(1)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(2)*(pXbk(2)*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - (2*t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (2*t(1)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - pXk_1(1)*(pXbk(2)*((t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)^2*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (2*t(1)^2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2), pXk_1(3)*(pXbk(2)*((2*t(2)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(2)*(pXbk(2)*((t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (2*t(2)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) + (pXk_1(1)*(t(1)*(t(1)^2 + t(2)^2 + t(3)^2) - 2*t(1)*t(2)^2 + 2*t(1)*t(2)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - t(1)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + pXbk(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + t(2)^2*pXbk(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + 2*t(1)*t(2)*t(3)*pXbk(2) + t(1)*t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - t(2)^2*pXbk(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - 2*t(1)*t(2)*t(3)*pXbk(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - t(1)*t(2)*t(3)*pXbk(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^2, pXk_1(3)*(pXbk(2)*((2*t(3)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXk_1(2)*(pXbk(2)*((t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - (2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (2*t(3)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) + (pXk_1(1)*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + 2*t(1)*t(3)^2*pXbk(2) - t(1)*pXbk(2)*(t(1)^2 + t(2)^2 + t(3)^2) + t(3)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - 2*t(1)*t(2)*t(3) + 2*t(1)*t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 2*t(1)*t(3)^2*pXbk(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) + t(1)*pXbk(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) - t(1)*t(3)^2*pXbk(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + t(2)*t(3)*pXbk(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2) + t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - t(2)*t(3)*pXbk(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^2];
    nodepth_exp1_Jacobian = @(T,t,pXbk_1, pXbk) [ pXbk(2)*(((t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) - pXbk_1(2)*(((t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - pXbk(2)*((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + 1) - pXbk_1(1)*(pXbk(2)*((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2), pXbk_1(1)*(pXbk(1)*((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + ((t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) - pXbk(1)*(((t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1) - pXbk_1(2)*(pXbk(1)*((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2), pXbk_1(1)*(pXbk(1)*((t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) - pXbk(2)*(((t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1)) - pXbk(2)*((t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) - (t(1)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) - pXbk(1)*((t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + pXbk_1(2)*(pXbk(2)*((t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)) + pXbk(1)*(((t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + 1)), (T(2)*pXbk(1) - T(1)*pXbk(2))*((2*t(1)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - pXbk_1(1)*((T(2)*pXbk(1) - T(1)*pXbk(2))*((t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(1) - T(3)*pXbk(1))*((t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)^2*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + ((2*t(1)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2))*(T(2) - T(3)*pXbk(2))) + (T(2) - T(3)*pXbk(2))*((t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + pXbk_1(2)*((T(2) - T(3)*pXbk(2))*((t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)^2*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)^2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(1) - T(3)*pXbk(1))*((2*t(1)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (T(2)*pXbk(1) - T(1)*pXbk(2))*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2)) - (T(1) - T(3)*pXbk(1))*((t(1)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2), (T(2)*pXbk(1) - T(1)*pXbk(2))*((2*t(2)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) + pXbk_1(2)*((T(2) - T(3)*pXbk(2))*((t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - (T(2)*pXbk(1) - T(1)*pXbk(2))*((t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + ((2*t(2)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2))*(T(1) - T(3)*pXbk(1))) - (T(1) - T(3)*pXbk(1))*((t(1)*t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(2)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)^2*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)^2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXbk_1(1)*((T(1) - T(3)*pXbk(1))*((t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(2)*pXbk(1) - T(1)*pXbk(2))*((t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(2)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(2) - T(3)*pXbk(2))*((2*t(2)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2))) + (T(2) - T(3)*pXbk(2))*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(2)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2), ((2*t(3)*(t(1)^2 + t(2)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(2)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2))*(T(2)*pXbk(1) - T(1)*pXbk(2)) - (T(1) - T(3)*pXbk(1))*((t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(2)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(2) - T(3)*pXbk(2))*((t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) - pXbk_1(1)*((T(2)*pXbk(1) - T(1)*pXbk(2))*((t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(2)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(1)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(2) - T(3)*pXbk(2))*((2*t(3)*(t(2)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(2)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) + (T(1) - T(3)*pXbk(1))*(sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(3)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2)) + pXbk_1(2)*((T(1) - T(3)*pXbk(1))*((2*t(3)*(t(1)^2 + t(3)^2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2 - (2*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) + (t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))*(t(1)^2 + t(3)^2))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2)) - (T(2)*pXbk(1) - T(1)*pXbk(2))*((t(1)*t(3)*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(2)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2) - (t(1)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (t(2)*t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(2)*t(3)^2*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2) + (T(2) - T(3)*pXbk(2))*((t(3)^2*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) - (t(3)^2*cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2) - sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2))/(t(1)^2 + t(2)^2 + t(3)^2)^(1/2) + (t(1)*t(2)*t(3)*sin((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)))/(t(1)^2 + t(2)^2 + t(3)^2)^(3/2) + (2*t(1)*t(2)*t(3)*(cos((t(1)^2 + t(2)^2 + t(3)^2)^(1/2)) - 1))/(t(1)^2 + t(2)^2 + t(3)^2)^2))];

    %residual error
    m = sum(has_k_1_depth); %number of features with depth
    n = size(features,1) - m; %number of features without depth
    if n == 0
        n = 1;
    end
    
    residual = zeros(2*m+n,1); %residual
    resCounter = 0;
    jacobian = zeros(2*m+n,6); %jacobian
    weights = zeros(2*m+n,1);
    color = zeros(2*m+n,3);
    depthCounter = 0;
    noDepthCounter = 0;
    
    for i=1:size(features,1)

        pXk_1 = Xk_1(i,:);

        pXbk_1 = Xbk_1(i,:);

        pXbk = Xbk(i,:);

        if has_k_1_depth(i) == 1        

            resCounter = resCounter + 1;
            residual(resCounter) = depth_exp1(T,t,pXk_1,pXbk);
            weights(resCounter,1) = bisquareWeight(residual(resCounter), C_depth_x);
            jacobian(resCounter,:) = weights(resCounter,1) * depth_exp1_Jacobian(T,t,pXk_1,pXbk);
            color(resCounter,:) = [1,0,0]; %red
            
            resCounter = resCounter + 1;
            residual(resCounter) = depth_exp2(T,t,pXk_1,pXbk);
            weights(resCounter,1) = bisquareWeight(residual(resCounter), C_depth_y);
            jacobian(resCounter,:) = weights(resCounter,1) * depth_exp2_Jacobian(T,t,pXk_1,pXbk);
            color(resCounter,:) = [0,1,0]; %green

            %count the rows with non zero weights
            if weights(resCounter-1,1) ~= 0 || weights(resCounter,1) ~= 0
                %atleast one of the depth equations were used
                depthCounter = depthCounter + 1;
            end
        else
            resCounter = resCounter + 1;
            residual(resCounter) = nodepth_exp1(T,t,pXbk_1, pXbk);
            weights(resCounter,1) = bisquareWeight(residual(resCounter), C_nodepth);
            jacobian(resCounter,:) = weights(resCounter,1) * nodepth_exp1_Jacobian(T,t,pXbk_1, pXbk);
            color(resCounter,:) = [0,0,1]; %blue

            %count the rows with non zero weights
            if weights(resCounter,1) ~= 0
                noDepthCounter = noDepthCounter + 1;
            end

        end
    end

%     jacobian = jacobian(1:resCounter,:);
%     residual = residual(1:resCounter,:);
%     weights = weights(1:resCounter,:);
%     color = color(1:resCounter,:);
        
%uncomment this section to display the plots
%     figure(1);clf;
% 
%     subplot(2,1,1);
%     scatter(1:resCounter,residual,[], color,'.');
%     
%     residual = residual .* weights;
% 
%     subplot(2,1,2);
%     hold on;
%     plot(weights,'.g');
%     plot(residual,'.r');
%     drawnow;

    %fprintf('D(%4d/%4d):%4.2f ND(%4d/%4d):%4.2f equations used\n', depthCounter,m,depthCounter*100/m, noDepthCounter,n,noDepthCounter*100/n);
    
    residual = residual';
 end
